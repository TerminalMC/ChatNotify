plugins {
    id "net.minecraftforge.gradle" version "${forgegradle_version}"
    id "org.spongepowered.mixin" version "0.7-SNAPSHOT"
}

base {
    archivesName = "${mod_name}-Forge-${minecraft_version}"
}

dependencies {
    compileOnly project(":common")
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor("org.spongepowered:mixin:${mixin_version}:processor")
}

mixin {
    add(sourceSets.main, "${mod_id}.refmap.json")
    config("${mod_id}.mixins.json")
    config("${mod_id}.forge.mixins.json")
}

minecraft {
    mappings channel: "official", version: minecraft_version
    copyIdeResources = true // Calls processResources when in dev

    if (file("src/main/resources/META-INF/accesstransformer.cfg").exists()) {
        accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
    }
}

sourceSets.main.resources.srcDir "src/generated/resources"

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
processResources {
    from project(":common").sourceSets.main.resources
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

jar.finalizedBy("reobfJar")
