plugins {
    id "fabric-loom" version "${loom_version}"
}

base {
    archivesName = "${mod_name}-Fabric-${minecraft_version}"
}

dependencies {
    compileOnly project(":common")
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    dependencies.include(fabricApi.module("fabric-lifecycle-events-v1", fabric_api_version))

    modImplementation "maven.modrinth:modmenu:${modmenu_version}"
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
processResources {
    from project(":common").sourceSets.main.resources
}

// Sources and Javadoc
//tasks.withType(Javadoc).configureEach {
//    source(project(":common").sourceSets.main.allJava)
//}
//tasks.named("sourcesJar", Jar) {
//    from(project(":common").sourceSets.main.allSource)
//}
